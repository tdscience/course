---
title: "Editing other people's work"
description-meta: "Learn to review, comment on, and edit papers, including submitting pull requests and resolving conflicts."
pagetitle: "Session 7: Peer Review and Collaboration"
format: html
---

# Rename your repo

Search the official GitHub documentation at docs.github.com for "rename a repository".

It should take you [here](https://docs.github.com/en/repositories/creating-and-managing-repositories/renaming-a-repository).

Follow the instructions to rename your repo to `eitcourse-yourname`.

You can also rename it using the `gh cli` with:

``` bash
gh repo rename eitcourse-robinlovelace
```

It will ask you to confirm.
Type "y" if you're sure.

![](images/paste-6.png)

Then, bingo, it will be renamed!

```         
✓ Renamed repository Robinlovelace/eitcourse-robinlovelace
✓ Updated the "origin" remote
```

## Forking you colleague's repo

Find the username you have been assigned to in the [people_updated.csv file](https://github.com/tdscience/course/blob/main/data/people_updated.csv).

Find the repo associated with the colleague.
If the username of the person you're assigned to is called kekeMerz, for example, you can find them with the gh search command as follows, for example:

``` bash
gh search repos --owner kekeMerz
```

You should see something like this:

```         
Showing 1 of 1 repositories

NAME                DESCRIPTION  VISIBILITY  UPDATED         
KekeMerz/eitcourse               public      about 1 hour ago
robin@robin-Apollo:~/github/tdscience/course$
```

Then, fork the repo with:

``` bash
cd ~/github/
gh repo fork KekeMerz/eitcourse-kekemerze --clone=true
```

# Reviewing and commenting on papers

-   Open a comment in the repo you will will be editing

-   First on the the web UI

-   Then, for fun, with the following gh cli command:

``` bash
gh issue create
```

# Making changes and submitting Pull Requests

Open their repo in an editor

Open RStudio and click 'open project', navigating to the folder you just cloned, or create new project if there is no .Rproj file.

e.g.

``` bash
code ~/github/eitcourse-kekemerz
# Or Rstudio
rstudio ~/github/eitcourse-kekemerz/eitcourse.Rproj
```

Optional: create a new branch with your issue.

This avoids pushing to the main branch, but it's not essential for this exercise, let's keep it simple.

and make a minimal change, adding one empty line.

Then, commit and push the change with:

``` bash
git add .
git commit -m "Great work! I suggest adding a map."
git push
```

Bonus: make a more substantial change, e.g. adding a sentence, fixing a typo, or (ambitiously) adding a new figure.

Then, commit and push the change with:

``` bash
git add .
git commit -m "Add a map to the paper."
git push
```

Then, submit a pull request (PR) with:

``` bash
gh pr create
```
If you get an error about the default repo not being set, you can set the default repo with:

``` bash
gh repo set-default
```

Then choose the original repo, e.g. `KekeMerz/eitcourse-kekemerze`.

Then, run the `gh pr create` command again.

# Controlled chaos: choose a paper and make some changes!

See https://github.com/tdscience/course/blob/main/data/people_updated.csv to find whose paper you will be commenting on and contributing to.